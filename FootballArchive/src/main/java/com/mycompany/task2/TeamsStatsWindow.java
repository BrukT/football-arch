/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.task2;

import java.awt.Font;
import java.awt.event.ItemEvent;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;


public class TeamsStatsWindow extends javax.swing.JFrame {

    private MongoManager mongo;
    private String league;
    private String year;
 
    public TeamsStatsWindow(MongoManager m, String l, String y) {
        initComponents();
        
        mongo = m;
        league = l;
        year = y; 
    
        setTableModel();
    }
    
    private void setTableModel() {
        teamStatsTable.getTableHeader().setFont(new Font("SansSerif", Font.PLAIN, 20));
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        teamStatsTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        teamStatsTable.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
        teamStatsTable.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );

        teamStatsTable.getColumnModel().getColumn(1).setMinWidth(300);
    }
    
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) teamStatsTable.getModel();
        model.setRowCount(0);
        teamStatsTable.getTableHeader().getColumnModel().getColumn(2).setHeaderValue("Ball Possesion");
        List<Document> rank = mongo.getTeamsStatsRanking(league, year, "PossessoPalla");
        
        for(int i=0; i<rank.size(); ++i) {
            Document team = rank.get(i);
            String name = team.get("name").toString();
            Double tmpValue = (Double) team.get("avgPossessoPalla");
            double value = Math.floor(tmpValue*100)/100;
            model.addRow(new Object[]{(i+1), name, value + " %"});
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        teamStatsTable = new javax.swing.JTable();
        teamsStatsCB = new javax.swing.JComboBox<>();

        setTitle("Teams Stats");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        kGradientPanel1.setkEndColor(new java.awt.Color(41, 41, 253));
        kGradientPanel1.setkStartColor(new java.awt.Color(2, 4, 70));

        teamStatsTable.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        teamStatsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pos", "Team", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        teamStatsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        teamStatsTable.setRowHeight(35);
        jScrollPane1.setViewportView(teamStatsTable);

        teamsStatsCB.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        teamsStatsCB.setForeground(new java.awt.Color(0, 0, 102));
        teamsStatsCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AVG. BALL POSSESSION", "AVG. SHOTS", "AVG. SHOTS ON TARGET", "CORNERS" }));
        teamsStatsCB.setToolTipText("");
        teamsStatsCB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        teamsStatsCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                teamsStatsCBItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 749, Short.MAX_VALUE)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(teamsStatsCB, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(teamsStatsCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void teamsStatsCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_teamsStatsCBItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED) { //because you invoke this function both in selection and deselection of an item    
            String stat = teamsStatsCB.getSelectedItem().toString();
            
            if(stat.equals("AVG. BALL POSSESSION"))
                    populateTable();              
                        
            if(stat.equals("AVG. SHOTS")) {
                DefaultTableModel model = (DefaultTableModel) teamStatsTable.getModel();
                model.setRowCount(0);
                teamStatsTable.getTableHeader().getColumnModel().getColumn(2).setHeaderValue("Avg. Shots");
                
                List<Document> rank = mongo.getTeamsStatsRanking(league, year, "TiriTotali");
                for(int i=0; i<rank.size(); ++i) {
                    Document team = rank.get(i);
                    String name = team.get("name").toString();
                    Double tmpValue = (Double) team.get("avgTiriTotali");
                    double value = Math.floor(tmpValue*100)/100;
                    model.addRow(new Object[]{(i+1), name, value});
                }
            }
            
            if(stat.equals("AVG. SHOTS ON TARGET")) {
                DefaultTableModel model = (DefaultTableModel) teamStatsTable.getModel();
                model.setRowCount(0);
                teamStatsTable.getTableHeader().getColumnModel().getColumn(2).setHeaderValue("Avg. Shots on target");
                
                List<Document> rank = mongo.getTeamsStatsRanking(league, year, "TiriInPorta");
                for(int i=0; i<rank.size(); ++i) {
                    Document team = rank.get(i);
                    String name = team.get("name").toString();
                    Double tmpValue = (Double) team.get("avgTiriInPorta");
                    double value = Math.floor(tmpValue*100)/100;
                    model.addRow(new Object[]{(i+1), name, value});
                }
            }
                        
            if(stat.equals("CORNERS")) {
                DefaultTableModel model = (DefaultTableModel) teamStatsTable.getModel();
                model.setRowCount(0);
                teamStatsTable.getTableHeader().getColumnModel().getColumn(2).setHeaderValue("Corners");
                                
                List<Document> rank = mongo.getTeamsStatsRanking(league, year, "CalciDAngolo");
                for(int i=0; i<rank.size(); ++i) {
                    Document team = rank.get(i);
                    String name = team.get("name").toString();
                    Double tmpValue = (Double) team.get("avgCalciDAngolo");
                    double value = Math.floor(tmpValue*100)/100;
                    model.addRow(new Object[]{(i+1), name, value});
                }
            }
        }
    }//GEN-LAST:event_teamsStatsCBItemStateChanged

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        populateTable();
        teamsStatsCB.setSelectedIndex(0);
        populateTable();
        kGradientPanel1.requestFocus();

    }//GEN-LAST:event_formWindowOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JTable teamStatsTable;
    private javax.swing.JComboBox<String> teamsStatsCB;
    // End of variables declaration//GEN-END:variables
}
